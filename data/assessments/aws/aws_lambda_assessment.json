{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Region Selection", "is_supported": true, "caveats": "", "notes": "AWS Lambda allows deployment to multiple AWS regions globally, allowing users to choose a region based on their data residency requirements."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Data Location Transparency", "is_supported": true, "caveats": "", "notes": "AWS provides information on region availability and data storage locations within the AWS documentation and management console.  While precise data location within a region is not always specified, the region itself is known."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Cross-Region Data Transfer Controls", "is_supported": true, "caveats": "Requires careful configuration", "notes": "Cross-region data transfer is possible but requires explicit configuration and management via services like S3, Kinesis, etc.  IAM roles and policies can be used to control access and transfer."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Encryption", "criterion_name": "Encryption in Transit", "is_supported": true, "caveats": "", "notes": "AWS Lambda uses HTTPS for communication, ensuring data encryption in transit.  Specific TLS versions and cipher suites are not explicitly configurable by the user but are maintained by AWS."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Encryption", "criterion_name": "Encryption at Rest", "is_supported": true, "caveats": "Depends on storage used", "notes": "AWS Lambda functions themselves don't store data directly, but any data stored within associated resources (like S3, EFS) can be encrypted at rest using server-side encryption (SSE) with AWS KMS-managed keys (CMEK) or customer-provided keys (CSEK).  Default encryption options are available but need to be enabled."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "IAM Integration", "is_supported": true, "caveats": "", "notes": "AWS Lambda is fully integrated with AWS Identity and Access Management (IAM), allowing granular control over access using roles and policies."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "Service Account Support", "is_supported": true, "caveats": "", "notes": "AWS Lambda supports service accounts for programmatic access.  Best practices recommend using least privilege for service accounts."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "MFA", "is_supported": true, "caveats": "For IAM users and roles", "notes": "MFA is not directly supported for Lambda functions but is strongly recommended for all IAM users and roles that manage Lambda functions."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "Standard Protocols", "is_supported": true, "caveats": "Indirectly via IAM", "notes": "AWS Lambda leverages IAM for authentication, which uses various industry standard protocols. OAuth 2.0 and OpenID Connect are indirectly supported through IAM integration."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "API Key Management", "is_supported": false, "caveats": "", "notes": "AWS Lambda does not directly use API keys.  Authentication and authorization are handled through IAM roles and policies."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "Private Access", "is_supported": true, "caveats": "", "notes": "AWS Lambda can be accessed privately using VPCs, enabling secure communication within a virtual network.  VPC networking is crucial for secure deployment of Lambda functions."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "Firewall Rules", "is_supported": true, "caveats": "Through VPC configuration", "notes": "Network access control is managed through VPC security groups and network ACLs, which act as firewalls for the network where Lambda functions are deployed. Ingress/egress rules can be set."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "DDoS Protection", "is_supported": true, "caveats": "Indirectly via AWS infrastructure", "notes": "AWS Lambda benefits indirectly from AWS's global infrastructure and inherent DDoS protection measures.  Additional protections are possible through the use of services like AWS WAF."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "API Gateway Integration", "is_supported": true, "caveats": "", "notes": "AWS Lambda integrates seamlessly with API Gateway, allowing for centralized management of traffic routing and security policies. API Gateway allows for enhanced security features."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Audit Logging", "is_supported": true, "caveats": "", "notes": "CloudTrail logs API calls and configuration changes related to Lambda functions.  This provides a comprehensive audit trail."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Access Logging", "is_supported": true, "caveats": "Requires configuration", "notes": "AWS Lambda does not automatically provide access logs; however, CloudWatch can be configured to log function invocations, errors, and other relevant information."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Monitoring & Alerting", "is_supported": true, "caveats": "", "notes": "AWS CloudWatch provides monitoring and alerting capabilities for Lambda functions.  Metrics like invocation duration, errors, and throttles can be tracked and alerts set."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Log Retention", "is_supported": true, "caveats": "", "notes": "CloudWatch Logs offers configurable log retention policies, allowing users to specify how long logs are stored."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Vulnerability Management & Patching", "criterion_name": "Security Updates", "is_supported": true, "caveats": "", "notes": "AWS is responsible for patching and updating the underlying Lambda infrastructure.  The platform regularly releases updates to improve security and performance."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Vulnerability Management & Patching", "criterion_name": "Vulnerability Scanning", "is_supported": false, "caveats": "Requires third-party tools", "notes": "AWS does not offer built-in vulnerability scanning for Lambda functions directly.  However, users can leverage third-party security tools to perform vulnerability assessments."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Compliance & Certifications", "criterion_name": "Industry Certifications", "is_supported": true, "caveats": "Depends on overall AWS account compliance", "notes": "AWS Lambda is part of the AWS platform, which holds numerous industry certifications including ISO 27001, SOC 2, and others. Compliance requires overall account configuration and adherence to AWS's security best practices."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Compliance & Certifications", "criterion_name": "Compliance Documentation", "is_supported": true, "caveats": "", "notes": "AWS provides comprehensive compliance documentation, whitepapers, and audit reports relating to the security of its services, including Lambda."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Loss Prevention (DLP)", "criterion_name": "Sensitive Data Scanning", "is_supported": true, "caveats": "Requires integration with other services", "notes": "Integration with other AWS services like Macie can enable sensitive data scanning, although it's not directly built into Lambda."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Loss Prevention (DLP)", "criterion_name": "Data Masking/Redaction", "is_supported": true, "caveats": "Requires application-level implementation", "notes": "Data masking/redaction must be implemented at the application level within the Lambda function itself. There isn't a built-in Lambda feature for this."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Secure Development Lifecycle (SDL)", "criterion_name": "API Design Principles", "is_supported": true, "caveats": "Best Practices", "notes": "AWS provides best practices and guidance on secure API design which should be followed when designing and implementing Lambda functions, even though it is not enforced by Lambda directly."}
{"api_name": "AWS Lambda", "api_domain_name": "lambda.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Secure Development Lifecycle (SDL)", "criterion_name": "Code Review & Testing", "is_supported": false, "caveats": "Responsibility of the developer", "notes": "Code review and security testing are the responsibility of the developers who build and deploy the Lambda functions. AWS does not enforce specific processes."}