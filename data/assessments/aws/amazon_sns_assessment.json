{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Region Selection", "is_supported": true, "caveats": "", "notes": "Amazon SNS allows you to select the AWS region where your topics and messages are stored.  Data remains within the selected region unless explicitly moved via cross-region mechanisms."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Data Location Transparency", "is_supported": true, "caveats": "", "notes": "AWS provides clear documentation on region selection and data location. The region selected during topic creation determines the data location. AWS also offers tools and services for monitoring and verifying data location, although precise physical location may not be explicitly disclosed."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Residency & Sovereignty", "criterion_name": "Cross-Region Data Transfer Controls", "is_supported": true, "caveats": "Requires careful configuration", "notes": "Data transfer between regions is possible, but requires explicit configuration and management.  AWS services like S3 and SNS allow for cross-region replication and publishing, but these need to be explicitly enabled and their security aspects carefully considered."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Encryption", "criterion_name": "Encryption in Transit", "is_supported": true, "caveats": "", "notes": "Amazon SNS uses TLS/SSL for secure communication between clients and the service.  The specific TLS version is managed by AWS and generally adheres to industry best practices."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Encryption", "criterion_name": "Encryption at Rest", "is_supported": true, "caveats": "Requires configuration for server-side encryption", "notes": "Amazon SNS supports server-side encryption using AWS KMS-managed keys (SSE-KMS) and customer-managed KMS keys (CMK).  Encryption at rest is not enabled by default and needs to be explicitly configured."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "IAM Integration", "is_supported": true, "caveats": "", "notes": "Amazon SNS integrates fully with AWS Identity and Access Management (IAM), allowing granular control over access to SNS resources through policies and roles."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "Service Account Support", "is_supported": true, "caveats": "", "notes": "AWS IAM roles, which act as service accounts, are used for programmatic access to SNS, allowing for least privilege access control."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "MFA", "is_supported": true, "caveats": "Applies to IAM users, not the service itself", "notes": "Multi-Factor Authentication (MFA) is available for IAM users who access SNS.  SNS itself doesn't directly support MFA."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "Standard Protocols", "is_supported": true, "caveats": "Specific protocols vary depending on access method", "notes": "SNS uses various standard protocols including HTTPS for API calls.  It supports various authentication mechanisms, including AWS Signature Version 4."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Authentication & Authorization", "criterion_name": "API Key Management", "is_supported": false, "caveats": "", "notes": "Amazon SNS does not use API keys in the traditional sense. Access is managed through IAM."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "Private Access", "is_supported": true, "caveats": "", "notes": "SNS can be accessed privately within a VPC using various methods, allowing secure communication without exposing the service to the public internet."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "Firewall Rules", "is_supported": true, "caveats": "Indirectly, via VPC security groups and Network ACLs", "notes": "While SNS itself doesn't have its own firewall rules, access can be controlled through VPC security groups and Network ACLs, which govern traffic to the VPC where SNS resources reside."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "DDoS Protection", "is_supported": true, "caveats": "", "notes": "Amazon SNS benefits from the inherent DDoS protection provided by the AWS infrastructure and AWS Shield."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Network Security", "criterion_name": "API Gateway Integration", "is_supported": true, "caveats": "Requires configuration", "notes": "Amazon API Gateway can be used to manage and secure access to SNS, offering features such as throttling, request validation, and authentication."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Audit Logging", "is_supported": true, "caveats": "", "notes": "AWS CloudTrail logs API calls made to SNS.  These logs can be used for auditing and security analysis."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Access Logging", "is_supported": true, "caveats": "Requires configuration of CloudWatch Logs", "notes": "Access logs are not automatically generated but can be enabled using CloudWatch Logs and appropriate configuration."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Monitoring & Alerting", "is_supported": true, "caveats": "", "notes": "Amazon CloudWatch can be used to monitor SNS metrics and set up alerts for various events."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Logging & Monitoring", "criterion_name": "Log Retention", "is_supported": true, "caveats": "", "notes": "CloudWatch Logs allows for configuring custom retention policies for SNS logs."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Vulnerability Management & Patching", "criterion_name": "Security Updates", "is_supported": true, "caveats": "", "notes": "AWS is responsible for patching and updating the underlying SNS infrastructure.  Regular security updates are part of AWS's operational responsibilities."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Vulnerability Management & Patching", "criterion_name": "Vulnerability Scanning", "is_supported": true, "caveats": "Indirectly via AWS security practices", "notes": "AWS performs regular security assessments and penetration testing of its services, including SNS.  Specific details about the frequency and scope are generally not publicly disclosed."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Compliance & Certifications", "criterion_name": "Industry Certifications", "is_supported": true, "caveats": "Specific certifications vary", "notes": "AWS maintains various compliance certifications and attestations for its services, including SNS.  Specific certifications will vary depending on the relevant industry regulations."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Compliance & Certifications", "criterion_name": "Compliance Documentation", "is_supported": true, "caveats": "", "notes": "AWS provides compliance reports and documentation for its services, including SNS, on the AWS website."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Loss Prevention (DLP)", "criterion_name": "Sensitive Data Scanning", "is_supported": false, "caveats": "Requires integration with other services", "notes": "SNS itself doesn't have built-in DLP capabilities.  Integration with other AWS services like Amazon Macie might be necessary to scan for sensitive data within messages."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Data Loss Prevention (DLP)", "criterion_name": "Data Masking/Redaction", "is_supported": false, "caveats": "Requires custom implementation", "notes": "Data masking/redaction is not a built-in feature of SNS.  It would need to be implemented at the application level before messages are sent to SNS."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Secure Development Lifecycle (SDL)", "criterion_name": "API Design Principles", "is_supported": true, "caveats": "Indirectly, via AWS security practices", "notes": "AWS follows industry best practices for secure API design, although the specifics are not publicly documented in detail for each service."}
{"api_name": "Amazon SNS", "api_domain_name": "sns.amazonaws.com", "platform": "aws", "is_endorsed": false, "criterion_category": "Secure Development Lifecycle (SDL)", "criterion_name": "Code Review & Testing", "is_supported": true, "caveats": "Indirectly, via AWS security practices", "notes": "AWS employs secure coding practices and security testing throughout its development lifecycle.  However, specifics about the process for SNS are not publicly available."}